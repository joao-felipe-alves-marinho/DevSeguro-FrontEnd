/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HomeImport } from './routes/home'
import { Route as NotAuthenticatedImport } from './routes/_not-authenticated'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as SplatImport } from './routes/$'
import { Route as NotAuthenticatedRegisterImport } from './routes/_not-authenticated/register'
import { Route as NotAuthenticatedLoginImport } from './routes/_not-authenticated/login'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedAdminImport } from './routes/_authenticated/admin'

// Create/Update Routes

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const NotAuthenticatedRoute = NotAuthenticatedImport.update({
  id: '/_not-authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const SplatRoute = SplatImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRoute,
} as any)

const NotAuthenticatedRegisterRoute = NotAuthenticatedRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => NotAuthenticatedRoute,
} as any)

const NotAuthenticatedLoginRoute = NotAuthenticatedLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => NotAuthenticatedRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAdminRoute = AuthenticatedAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_not-authenticated': {
      id: '/_not-authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NotAuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_not-authenticated/login': {
      id: '/_not-authenticated/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NotAuthenticatedLoginImport
      parentRoute: typeof NotAuthenticatedImport
    }
    '/_not-authenticated/register': {
      id: '/_not-authenticated/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof NotAuthenticatedRegisterImport
      parentRoute: typeof NotAuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAdminRoute: typeof AuthenticatedAdminRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAdminRoute: AuthenticatedAdminRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface NotAuthenticatedRouteChildren {
  NotAuthenticatedLoginRoute: typeof NotAuthenticatedLoginRoute
  NotAuthenticatedRegisterRoute: typeof NotAuthenticatedRegisterRoute
}

const NotAuthenticatedRouteChildren: NotAuthenticatedRouteChildren = {
  NotAuthenticatedLoginRoute: NotAuthenticatedLoginRoute,
  NotAuthenticatedRegisterRoute: NotAuthenticatedRegisterRoute,
}

const NotAuthenticatedRouteWithChildren =
  NotAuthenticatedRoute._addFileChildren(NotAuthenticatedRouteChildren)

export interface FileRoutesByFullPath {
  '/$': typeof SplatRoute
  '': typeof NotAuthenticatedRouteWithChildren
  '/home': typeof HomeRoute
  '/admin': typeof AuthenticatedAdminRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/login': typeof NotAuthenticatedLoginRoute
  '/register': typeof NotAuthenticatedRegisterRoute
}

export interface FileRoutesByTo {
  '/$': typeof SplatRoute
  '': typeof NotAuthenticatedRouteWithChildren
  '/home': typeof HomeRoute
  '/admin': typeof AuthenticatedAdminRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/login': typeof NotAuthenticatedLoginRoute
  '/register': typeof NotAuthenticatedRegisterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$': typeof SplatRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_not-authenticated': typeof NotAuthenticatedRouteWithChildren
  '/home': typeof HomeRoute
  '/_authenticated/admin': typeof AuthenticatedAdminRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_not-authenticated/login': typeof NotAuthenticatedLoginRoute
  '/_not-authenticated/register': typeof NotAuthenticatedRegisterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$'
    | ''
    | '/home'
    | '/admin'
    | '/profile'
    | '/login'
    | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/$' | '' | '/home' | '/admin' | '/profile' | '/login' | '/register'
  id:
    | '__root__'
    | '/$'
    | '/_authenticated'
    | '/_not-authenticated'
    | '/home'
    | '/_authenticated/admin'
    | '/_authenticated/profile'
    | '/_not-authenticated/login'
    | '/_not-authenticated/register'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  SplatRoute: typeof SplatRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  NotAuthenticatedRoute: typeof NotAuthenticatedRouteWithChildren
  HomeRoute: typeof HomeRoute
}

const rootRouteChildren: RootRouteChildren = {
  SplatRoute: SplatRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  NotAuthenticatedRoute: NotAuthenticatedRouteWithChildren,
  HomeRoute: HomeRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$",
        "/_authenticated",
        "/_not-authenticated",
        "/home"
      ]
    },
    "/$": {
      "filePath": "$.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/admin",
        "/_authenticated/profile"
      ]
    },
    "/_not-authenticated": {
      "filePath": "_not-authenticated.tsx",
      "children": [
        "/_not-authenticated/login",
        "/_not-authenticated/register"
      ]
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/_authenticated/admin": {
      "filePath": "_authenticated/admin.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_not-authenticated/login": {
      "filePath": "_not-authenticated/login.tsx",
      "parent": "/_not-authenticated"
    },
    "/_not-authenticated/register": {
      "filePath": "_not-authenticated/register.tsx",
      "parent": "/_not-authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
